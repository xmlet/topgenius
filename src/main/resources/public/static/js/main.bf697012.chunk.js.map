{"version":3,"sources":["index.js"],"names":["InputId","props","_this","Object","C_Users_mcarvalho_AppData_Roaming_npm_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_mcarvalho_AppData_Roaming_npm_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_mcarvalho_AppData_Roaming_npm_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","country","limit","evt","setState","target","value","handler","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","class","onChange","updateCountry","type","name","id","updateLimit","onClick","getArtistTracks","React","Component","TopTracksView","_this3","tracks","fetching","geographicTopTracks","page","_this4","fetch","lastfmUrl","then","resp","json","data","Error","track","updateState","catch","err","alert","message","length","maxSize","slice","newTracks","concat","results","_this5","label","tracksHandler","react_loading__WEBPACK_IMPORTED_MODULE_7___default","color","map","t","idx","key","href","url","listeners","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf697012.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport ReactLoading from \"react-loading\"\r\n\r\nclass InputId  extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { \r\n            country: '',\r\n            limit: 10000\r\n        } \r\n    }\r\n\r\n    updateCountry(evt) {\r\n        this.setState({\r\n            country: evt.target.value,\r\n            limit: this.state.limit\r\n        })\r\n    }\r\n\r\n    updateLimit(evt) {\r\n        this.setState({\r\n            country: this.state.country,\r\n            limit: evt.target.value\r\n        })\r\n    }\r\n\r\n    getArtistTracks() {\r\n        this.props.handler(this.state.country, this.state.limit)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"form-group\">\r\n                <label class=\"col-form-label\">Country:</label>\r\n                <input \r\n                    value={this.state.country} \r\n                    onChange={evt => this.updateCountry(evt)}\r\n                    class=\"form-control\" type=\"text\" name=\"country\" id=\"inputCountry\"/>\r\n                <label class=\"col-form-label\">Number of tracks:</label>\r\n                <input \r\n                    value={this.state.limit} \r\n                    onChange={evt => this.updateLimit(evt)}\r\n                    class=\"form-control\" type=\"text\" name=\"limit\" id=\"inputLimit\"/>\r\n                <button value='tracks' onClick={() => this.getArtistTracks()}>Top Tracks</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass TopTracksView extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { \r\n            tracks: [],\r\n            fetching: false\r\n        }\r\n    }\r\n\r\n    tracksHandler(country, limit) {\r\n        this.setState({ \r\n            tracks: [],\r\n            fetching: true\r\n        })\r\n        this.geographicTopTracks(country, limit, 1)\r\n    }\r\n    geographicTopTracks(country, limit, page) {\r\n        const RESULTS = 50; // number of results to fetch per page\r\n        page = page ? page : 1\r\n        fetch(this.lastfmUrl(country, page, RESULTS))\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                if(!data.tracks) throw Error('No tracks for given country!')\r\n                return data.tracks.track\r\n            })\r\n            .then(tracks => this.updateState(tracks, country, limit, page))\r\n            .catch(err => {\r\n                this.setState({ \r\n                    tracks: this.state.tracks,\r\n                    fetching: false\r\n                })\r\n                alert(err.message)\r\n            })\r\n    }\r\n    /**\r\n     * There is a BUG in LastFM Web API that returns more results than those\r\n     * specified in the limit query parameter.\r\n     * Sometimes the page 2 returns 100 rather than 50 records for a limit of 50.\r\n     * \r\n     * @param {*} tracks New tracks to concatenate on state.\r\n     * @param {*} country A country name, as defined by the ISO 3166-1 country names standard.\r\n     * @param {*} page The page number.\r\n     * @param {*} results The number of results to fetch per page.\r\n     */\r\n    updateState(tracks, country, limit, page) {\r\n        if(tracks.length === 0) \r\n            return\r\n        const maxSize = limit - this.state.tracks.length\r\n        let fetching = true\r\n        if(tracks.length > maxSize) {\r\n            tracks = tracks.slice(0, maxSize)\r\n            fetching = false\r\n        }\r\n        const newTracks = this.state.tracks.concat(tracks)\r\n        this.setState({\r\n            'tracks': newTracks,\r\n            'fetching': fetching\r\n        })\r\n        if(fetching) \r\n            this.geographicTopTracks(country, limit, page + 1)\r\n        \r\n    }\r\n    /**\r\n     * @param {*} country A country name, as defined by the ISO 3166-1 country names standard.\r\n     * @param {*} page The page number.\r\n     * @param {*} results The number of results to fetch per page.\r\n     */\r\n    lastfmUrl(country, page, results) {\r\n        const API_KEY = '038cde478fb0eff567330587e8e981a4'\r\n        const HOST = 'http://ws.audioscrobbler.com/2.0/'\r\n        return `${HOST}?method=geo.gettoptracks&country=${country}&page=${page}&limit=${results}&format=json&api_key=${API_KEY}`\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"jumbotron\">\r\n                    <p class=\"lead\">TopGenius.eu</p>\r\n                    <hr/>\r\n                    <InputId label='Artist name: ' handler={(country, limit) => this.tracksHandler(country, limit)}/>\r\n                    <div>\r\n                        {this.state.fetching && <ReactLoading type={\"bars\"} color=\"#666666\" /> }\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <table class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Rank</th>\r\n                            <th>Name</th>\r\n                            <th>Listeners</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.state.tracks.map( (t, idx) => (\r\n                            <tr key={idx}>\r\n                                <td>{idx + 1}</td>\r\n                                <td><a href={t.url} target=\"_blank\">{t.name}</a></td>\r\n                                <td>{t.listeners}</td>\r\n                            </tr>\r\n                        )) }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <TopTracksView />,\r\n    document.getElementById('root')\r\n);\r\n  "],"sourceRoot":""}